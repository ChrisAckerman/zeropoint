#!/usr/bin/env zsh
autoload -Uz add-zsh-hook
autoload -Uz optarg_utils && optarg_utils
autoload -Uz ternary
autoload -Uz git_utils && git_utils

prompt_zeropoint_setup() {
    optarg_init $@
    optarg_flag r right; local right=$(ternary)
    optarg_flag u unicode; local unicode=$(ternary)
    optarg_shift; prompt_zeropoint_user_color=${OPTARG:-green}
    optarg_shift; prompt_zeropoint_path_color=${OPTARG:-blue}
    optarg_shift; prompt_zeropoint_git_color=${OPTARG:-magenta}
    [[ $unicode ]]; prompt_zeropoint_arrow=$(ternary â¯ˆ \$)

    if [[ $right ]]; then
        PS1='%(!.#.$prompt_zeropoint_arrow) '
        RPS1='%{%B%F{$prompt_zeropoint_path_color}%}%~%{%f%}'
        RPS1+='$(prompt_zeropoint_git)'
        RPS1+='|%{%F{$prompt_zeropoint_user_color}%}%n@%M%{%f%b%}'
    else
        PS1='%{%B%F{$prompt_zeropoint_user_color}%}%n@%M%{%f%}'
        PS1+='$(prompt_zeropoint_git)'
        PS1+='|%{%F{$prompt_zeropoint_path_color}%}%~%{%f%}'
        PS1+='%{%b%} %(!.#.$prompt_zeropoint_arrow) '
        RPS1=
    fi

	PS2='%_ $prompt_zeropoint_arrow '
    RPS2=
	PS3='?# '
	PS4='+'

	prompt_opts=(cr percent subst)

    add-zsh-hook precmd prompt_zeropoint_precmd

    if [[ -o login ]]; then
        export _PROMPT_ZEROPOINT_FIRST=${_PROMPT_ZEROPOINT_FIRST:-true}
    fi
}

prompt_zeropoint_precmd() {
    # Print non-zero exit code and elapsed time if necessary.
    if [[ clear != "$LAST_COMMAND" && true != "$_PROMPT_ZEROPOINT_FIRST" ]]; then
        if [[ -n "$LAST_COMMAND" ]]; then
            local code=${LAST_COMMAND_EXIT_CODE:-0}
            local elapsed=${LAST_COMMAND_ELAPSED:-0}

            if [[ "$code" -gt 0 ]]; then
                print -P "%K{52} Exit Code $code %E%k"
            fi

            if [[ "$elapsed" -ge 5 ]]; then
                elapsed=`print -f %02d:%02d:%02d \
                    $((elapsed / 3600)) \
                    $(((elapsed / 60) % 60)) \
                    $((elapsed % 60))`

                print -P "%K{236} Elapsed Time $elapsed %E%k"
            fi
        fi

        echo
    fi

    # Update the git branch/reference so it can be displayed in the prompt.
    GIT_BRANCH=`git_branch || git_reference '#' || echo ''`
    GIT_DIRTY=`git_dirty || echo 0`

    export _PROMPT_ZEROPOINT_FIRST=false
}

prompt_zeropoint_git() {
    local gitprompt

    if [[ -n "$GIT_BRANCH" ]]; then
        gitprompt="$GIT_BRANCH"

        if [[ "$GIT_DIRTY" -ne 0 ]]; then
            gitprompt+='*'
        fi

        gitprompt="|%{%F{$prompt_zeropoint_git_color}%}${gitprompt}%{%f%}"
    fi

    echo -n $gitprompt
}

prompt_zeropoint_setup "$@"

return 0
